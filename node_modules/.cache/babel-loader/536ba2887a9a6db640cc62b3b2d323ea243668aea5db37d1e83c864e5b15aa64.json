{"ast":null,"code":"import axios from 'axios';\nimport ElementUI from \"element-ui\";\naxios.defaults.withCredentials = true; //表示请求可以携带cookie\n\nconst request = axios.create({\n  baseURL: \"http://localhost:9001\",\n  timeout: 5000\n});\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\n// request.interceptors.request.use(config => {\n//     config.headers['Content-Type'] = 'application/json;charset=utf-8';\n//     let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n//     if (user) {\n//         config.headers['token'] = user.token;  // 设置请求头\n//     }\n//     return config\n// }, error => {\n//     return Promise.reject(error)\n// });\n\n//response 拦截器\n//可以在接口响应后统一处理结果\n\nexport default request;","map":{"version":3,"names":["axios","ElementUI","defaults","withCredentials","request","create","baseURL","timeout"],"sources":["D:/Work/front-vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios';\r\nimport ElementUI from \"element-ui\";\r\n\r\naxios.defaults.withCredentials = true; //表示请求可以携带cookie\r\n\r\nconst request = axios.create({\r\n\tbaseURL: \"http://localhost:9001\",\r\n\ttimeout: 5000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\n// request.interceptors.request.use(config => {\r\n//     config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n//     let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n//     if (user) {\r\n//         config.headers['token'] = user.token;  // 设置请求头\r\n//     }\r\n//     return config\r\n// }, error => {\r\n//     return Promise.reject(error)\r\n// });\r\n\r\n//response 拦截器\r\n//可以在接口响应后统一处理结果\r\n\r\n\r\n\r\nexport default request\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAElCD,KAAK,CAACE,QAAQ,CAACC,eAAe,GAAG,IAAI,CAAC,CAAC;;AAEvC,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC5BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;AACV,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}